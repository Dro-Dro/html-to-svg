Sun Apr  2 17:57:22 PDT 2023
Linux csslab4 4.18.0-425.3.1.el8.x86_64 #1 SMP Wed Nov 9 20:13:27 UTC 2022 x86_64 x86_64 x86_64 GNU/Linux
uid=1095404(hpeter4) gid=2121095404(hpeter4) groups=2121095404(hpeter4),605559(lab-access)
=====================================================
1. Compiles without warnings with -Wall -Wextra flags
=====================================================
=====================================================
2. Runs and produces correct output
=====================================================
Reading: circle
Reading: circle
Reading: circle
Reading: rect
Reading: ellipse
=====================================================
3. clang-tidy warnings are fixed
=====================================================
13550 warnings generated.
27100 warnings generated.
40668 warnings generated.
54218 warnings generated.
/home/NETID/hpeter4/css343/343-svg-Dro-Dro/circle.cpp:20:32: error: parameter name 'in' is too short, expected at least 3 characters [readability-identifier-length,-warnings-as-errors]
istream &Circle::read(istream &in) {
                               ^
/home/NETID/hpeter4/css343/343-svg-Dro-Dro/circle.h:21:26: error: parameter name 'in' is too short, expected at least 3 characters [readability-identifier-length,-warnings-as-errors]
  istream &read(istream &in) override;
                         ^
/home/NETID/hpeter4/css343/343-svg-Dro-Dro/ellipse.cpp:21:33: error: parameter name 'in' is too short, expected at least 3 characters [readability-identifier-length,-warnings-as-errors]
istream &Ellipse::read(istream &in) {
                                ^
/home/NETID/hpeter4/css343/343-svg-Dro-Dro/ellipse.h:21:26: error: parameter name 'in' is too short, expected at least 3 characters [readability-identifier-length,-warnings-as-errors]
  istream &read(istream &in) override;
                         ^
/home/NETID/hpeter4/css343/343-svg-Dro-Dro/rect.cpp:21:30: error: parameter name 'in' is too short, expected at least 3 characters [readability-identifier-length,-warnings-as-errors]
istream &Rect::read(istream &in) {
                             ^
/home/NETID/hpeter4/css343/343-svg-Dro-Dro/rect.h:21:26: error: parameter name 'in' is too short, expected at least 3 characters [readability-identifier-length,-warnings-as-errors]
  istream &read(istream &in) override;
                         ^
/home/NETID/hpeter4/css343/343-svg-Dro-Dro/svg.h:25:34: error: parameter name 'in' is too short, expected at least 3 characters [readability-identifier-length,-warnings-as-errors]
  virtual istream &read(istream &in) = 0;
                                 ^
Suppressed 54205 warnings (54205 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.
7 warnings treated as errors
=====================================================
4. clang-format does not find any formatting issues
=====================================================
Running clang-format on ./circle.cpp
Running clang-format on ./ellipse.cpp
Running clang-format on ./main.cpp
Running clang-format on ./rect.cpp
=====================================================
5. No memory leaks using g++
=====================================================
=====================================================
6. No memory leaks using valgrind, look for "definitely lost" 
=====================================================
==390688== Memcheck, a memory error detector
==390688== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==390688== Using Valgrind-3.19.0 and LibVEX; rerun with -h for copyright info
==390688== Command: ./a.out input1.txt svg1.svg
==390688== Parent PID: 390591
==390688== 
==390688== 
==390688== HEAP SUMMARY:
==390688==     in use at exit: 0 bytes in 0 blocks
==390688==   total heap usage: 15 allocs, 15 frees, 94,560 bytes allocated
==390688== 
==390688== All heap blocks were freed -- no leaks are possible
==390688== 
==390688== For lists of detected and suppressed errors, rerun with: -s
==390688== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
=====================================================
7. Tests have full code coverage
=====================================================
File '/home/NETID/hpeter4/css343/343-svg-Dro-Dro/circle.cpp':
Name                                 Regions    Miss   Cover     Lines    Miss   Cover  Branches    Miss   Cover
----------------------------------------------------------------------------------------------------------------
Circle::write(std::ostream&) const         1       0 100.00%         9       0 100.00%         0       0   0.00%
Circle::read(std::istream&)                1       0 100.00%         4       0 100.00%         0       0   0.00%
----------------------------------------------------------------------------------------------------------------
TOTAL                                      2       0 100.00%        13       0 100.00%         0       0   0.00%

File '/home/NETID/hpeter4/css343/343-svg-Dro-Dro/ellipse.cpp':
Name                                  Regions    Miss   Cover     Lines    Miss   Cover  Branches    Miss   Cover
-----------------------------------------------------------------------------------------------------------------
Ellipse::write(std::ostream&) const         1       0 100.00%        10       0 100.00%         0       0   0.00%
Ellipse::read(std::istream&)                1       0 100.00%         4       0 100.00%         0       0   0.00%
-----------------------------------------------------------------------------------------------------------------
TOTAL                                       2       0 100.00%        14       0 100.00%         0       0   0.00%

File '/home/NETID/hpeter4/css343/343-svg-Dro-Dro/main.cpp':
Name                                                                                                                                                                                             Regions    Miss   Cover     Lines    Miss   Cover  Branches    Miss   Cover
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
readSVGFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)                                                                                                   17       2  88.24%        31       8  74.19%        12       3  75.00%
writeSVGFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<SVG*, std::allocator<SVG*> >&)                                                        8       2  75.00%        21       5  76.19%         6       2  66.67%
processSVGFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)         2       0 100.00%         8       0 100.00%         2       0 100.00%
main                                                                                                                                                                                                   4       1  75.00%         8       3  62.50%         2       1  50.00%
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
TOTAL                                                                                                                                                                                                 31       5  83.87%        68      16  76.47%        22       6  72.73%

File '/home/NETID/hpeter4/css343/343-svg-Dro-Dro/rect.cpp':
Name                                                                                                                                                                                             Regions    Miss   Cover     Lines    Miss   Cover  Branches    Miss   Cover
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Rect::write(std::ostream&) const                                                                                                                                                                       1       0 100.00%        10       0 100.00%         0       0   0.00%
Rect::read(std::istream&)                                                                                                                                                                              1       0 100.00%         4       0 100.00%         0       0   0.00%
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
TOTAL                                                                                                                                                                                                  2       0 100.00%        14       0 100.00%         0       0   0.00%
=====================================================
The lines below were never executed
=====================================================
   15|      0|    cout << "Failed to open: " << inFile << endl;
   16|      0|    return svgs;
   17|      0|  }
   29|      0|      cout << "Unrecognized type: " << sType << endl;
   30|      0|      string junk;
   31|      0|      getline(fin, junk);
   32|      0|      obj = nullptr;
   33|      0|    }
   46|      0|    return false;
   47|      0|  }
   50|      0|    cout << "Failed to write to: " << outFile << endl;
   51|      0|    return false;
   52|      0|  }
   81|      0|    cout << "usage: svg inputfile outputfile [input2 output2] ..." << endl;
   82|      0|    exit(EXIT_FAILURE);
   83|      0|  }
   15|      0|  friend ostream &operator<<(ostream &out, const SVG &svg) {
   16|      0|    return svg.write(out);
   17|      0|  }
Sun Apr  2 17:57:34 PDT 2023
=====================================================
To create an output.txt file with all the output from this script
Run the below command
      ./create-output.sh > output.txt 2>&1 
=====================================================
